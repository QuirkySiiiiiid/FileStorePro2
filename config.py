

import os
from os import environ, getenv
import logging
from logging.handlers import RotatingFileHandler

# Bot Token from @BotFather
TG_BOT_TOKEN = os.environ.get("TG_BOT_TOKEN", "")

# API Credentials from my.telegram.org
APP_ID = int(os.environ.get("APP_ID", ""))
API_HASH = os.environ.get("API_HASH", "")

# Database Channel ID for storing files
CHANNEL_ID = int(os.environ.get("CHANNEL_ID", ""))

# Owner Details
OWNER = os.environ.get("OWNER", "Yato")  # Owner username
OWNER_ID = int(os.environ.get("OWNER_ID", ""))  # Owner user ID

# MongoDB Database Configuration
DB_URI = os.environ.get("DATABASE_URL", "")  # MongoDB connection URI
DB_NAME = os.environ.get("DATABASE_NAME", "FileStore")  # Database name

# Auto-Delete Configuration
TIME = int(os.environ.get("TIME", "10"))  # Time in seconds for auto-delete messages

# Force Subscribe Channel Configuration
# Set channel IDs for force subscribe feature (set to 0 to disable)
FORCE_SUB_CHANNEL1 = int(os.environ.get("FORCE_SUB_CHANNEL1", "0"))
FORCE_SUB_CHANNEL2 = int(os.environ.get("FORCE_SUB_CHANNEL2", "0"))
FORCE_SUB_CHANNEL3 = int(os.environ.get("FORCE_SUB_CHANNEL3", "0"))
FORCE_SUB_CHANNEL4 = int(os.environ.get("FORCE_SUB_CHANNEL4", "0"))

# Bot Workers
TG_BOT_WORKERS = int(os.environ.get("TG_BOT_WORKERS", "4"))

# Random Images for Bot Responses
# Add multiple image URLs for dynamic image changes
PICS = [
    "https://telegra.ph/file/1.jpg",
    "https://telegra.ph/file/2.jpg",
    "https://telegra.ph/file/3.jpg",
    # Add more image URLs here
]

# Default Images
# START_PIC = os.environ.get("START_PIC", "https://telegra.ph/file/start.jpg")
# FORCE_PIC = os.environ.get("FORCE_PIC", "https://telegra.ph/file/force.jpg")

# Shortlink Configuration
TOKEN = True if os.environ.get('TOKEN', "True") == "True" else False
SHORTLINK_URL = os.environ.get("SHORTLINK_URL", "")
SHORTLINK_API = os.environ.get("SHORTLINK_API", "")
VERIFY_EXPIRE = int(os.environ.get('VERIFY_EXPIRE', 600))
IS_VERIFY = os.environ.get("IS_VERIFY", "True")
TUT_VID = os.environ.get("TUT_VID", "")

# Bot Messages and Captions
HELP_TXT = """<b>¬ª ·¥Ä·¥Ö·¥ç…™…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:

‚Ä∫‚Ä∫ /batch : ·¥Ñ Ä·¥á·¥Ä·¥õ·¥á …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥áss·¥Ä…¢·¥ás
‚Ä∫‚Ä∫ /genlink : ·¥Ñ Ä·¥á·¥Ä·¥õ·¥á  ü…™…¥·¥ã “ì·¥è Ä ·¥è…¥·¥á ·¥ò·¥ès·¥õ
‚Ä∫‚Ä∫ /broadcast :  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ ·¥ç·¥áss·¥Ä…¢·¥á
‚Ä∫‚Ä∫ /broadcast silent : s…™ ü·¥á…¥·¥õ  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ
‚Ä∫‚Ä∫ /forcesub : ·¥†…™·¥á·¥° “ì·¥è Ä·¥Ñ·¥ás·¥ú ô ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös
‚Ä∫‚Ä∫ /users : ·¥†…™·¥á·¥° ·¥ús·¥á Ä s·¥á·¥õ·¥õ…™…¥…¢s
‚Ä∫‚Ä∫ /fsettings : ·¥†…™·¥á·¥° “ì…™ ü·¥á s·¥á·¥õ·¥õ…™…¥…¢s
‚Ä∫‚Ä∫ /autodel : ·¥†…™·¥á·¥° ·¥Ä·¥ú·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á
‚Ä∫‚Ä∫ /commands : ·¥†…™·¥á·¥°  ô·¥Äs…™·¥Ñ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös
‚Ä∫‚Ä∫ /restart :  Ä·¥ás·¥õ·¥Ä Ä·¥õ  ô·¥è·¥õ
‚Ä∫‚Ä∫ /stats : ·¥†…™·¥á·¥° s·¥õ·¥Ä·¥õ…™s·¥õ…™·¥Ñs</b>"""

# About Text with Dynamic Bot Username
ABOUT_TXT = """
‚Ä∫‚Ä∫ ·¥ç è …¥·¥Ä·¥ç·¥á: **__{}__**
‚Ä∫‚Ä∫ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás ·¥Ñ ú·¥Ä…¥…¥·¥á ü: C ü…™·¥Ñ·¥ã  ú·¥á Ä·¥á
‚Ä∫‚Ä∫ ·¥è·¥°…¥·¥á Ä: {OWNER_USERNAME}
‚Ä∫‚Ä∫  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á: P è·¥õ ú·¥è…¥ 3
‚Ä∫‚Ä∫  ü…™ ô Ä·¥Ä Ä è: P è Ä·¥è…¢ Ä·¥Ä·¥ç ·¥†2
‚Ä∫‚Ä∫ ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á: M·¥è…¥…¢·¥è ·¥Ö ô
‚Ä∫‚Ä∫ ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä: @cosmic_freak
"""

# Welcome Message Template
START_MSG = """<b> ú·¥á ü ü·¥è {first} üëã

…™'·¥ç ·¥Ä “ì…™ ü·¥á s·¥õ·¥è Ä·¥á  ô·¥è·¥õ ·¥°…™·¥õ ú ·¥áx·¥õ Ä·¥Ä “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás! üöÄ

·¥ús·¥á ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° ·¥õ·¥è ·¥áx·¥ò ü·¥è Ä·¥á!</b>"""

# Admin List Configuration
try:
    ADMINS = [int(x) for x in os.environ.get("ADMINS", "").split()]
    ADMINS.append(OWNER_ID)
except ValueError:
    raise Exception("Invalid admin list. Please check ADMINS environment variable.")

# Force Subscribe Message
FORCE_MSG = """<b> ú·¥á ü ü·¥è {first} üëã

·¥ò ü·¥á·¥Äs·¥á ·¥ä·¥è…™…¥ ·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á üs ·¥õ·¥è ·¥ús·¥á ·¥õ ú·¥á  ô·¥è·¥õ!

·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥ "·¥ä·¥è…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü"  ô·¥ú·¥õ·¥õ·¥è…¥s  ô·¥á ü·¥è·¥° üëá</b>"""

# Custom Caption for Files
CUSTOM_CAPTION = os.environ.get("CUSTOM_CAPTION", "<b>“ì…™ ü·¥á: {filename}</b>")

# Protection Settings
PROTECT_CONTENT = os.environ.get('PROTECT_CONTENT', "False") == "True"
DISABLE_CHANNEL_BUTTON = os.environ.get('DISABLE_CHANNEL_BUTTON', "False") == "True"

# Statistics Message Template
BOT_STATS_TEXT = """<b> ô·¥è·¥õ s·¥õ·¥Ä·¥õ…™s·¥õ…™·¥Ñs
‚åöÔ∏è ·¥ú·¥ò·¥õ…™·¥ç·¥á: {uptime}
üë• ·¥ús·¥á Äs: {users}
‚ö°Ô∏è ·¥Ñ·¥ò·¥ú: {cpu}%
üíæ  Ä·¥Ä·¥ç: {ram}%</b>"""

# Error Messages
USER_REPLY_TEXT = "‚ö†Ô∏è ·¥è…¥ ü è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö!"

# Logging Configuration
LOG_FILE_NAME = "filestore_bot.log"
logging.basicConfig(
    level=logging.INFO,
    format="[%(asctime)s - %(levelname)s] - %(name)s - %(message)s",
    datefmt='%d-%b-%y %H:%M:%S',
    handlers=[
        RotatingFileHandler(LOG_FILE_NAME, maxBytes=50000000, backupCount=10),
        logging.StreamHandler()
    ]
)
logging.getLogger("pyrogram").setLevel(logging.WARNING)

def LOGGER(name: str) -> logging.Logger:
    """Get logger instance"""
    return logging.getLogger(name)
   